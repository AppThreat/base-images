FROM registry.suse.com/bci/rust:1.78

ARG GCC_VERSION=13
ARG NODE_VERSION=22.3.0
ARG LLVM_VERSION=18.1.2

ENV LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    NVM_DIR="/root/.nvm" \
    LLVM_HOME=/opt/llvm/llvm-project-${LLVM_VERSION}.src/release-build/bin \
    CMAKE_CXX_COMPILER=/usr/bin/g++
ENV PATH=$PATH:${LLVM_HOME}:/root/.nvm/versions/node/v${NODE_VERSION}/bin:

RUN zypper refresh && zypper --non-interactive update && zypper --non-interactive install -l --no-recommends gcc${GCC_VERSION} gcc${GCC_VERSION}-c++ gcc${GCC_VERSION}-fortran \
        ninja git-core wget zip unzip make gawk cmake bison xz python311 python311-pip python311-devel valgrind-devel \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 10 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 10 \
    && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_VERSION} 10 \
    && mkdir /opt/llvm && cd /opt/llvm \
    && curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-${LLVM_VERSION}/llvm-project-${LLVM_VERSION}.src.tar.xz \
    && tar Jxf llvm-project-${LLVM_VERSION}.src.tar.xz \
    && cd /opt/llvm/llvm-project-${LLVM_VERSION}.src \
    && cmake -S llvm -B ./release-build -G Ninja -DCMAKE_BUILD_TYPE=Release \
        -DLLVM_ENABLE_DUMP=ON -DLLVM_ENABLE_FFI=ON \
        -DLLVM_ENABLE_PROJECTS="clang;compiler-rt;lld;clang-tools-extra" \
        -DLLVM_DISTRIBUTION_COMPONENTS="lld;compiler-rt;clang-format" \
        -DCLANG_DEFAULT_LINKER="lld" \
    && ninja -C ./release-build -j 8 \
    && rm /opt/llvm/llvm-project-${LLVM_VERSION}.src.tar.xz \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash \
    && source /root/.nvm/nvm.sh \
    && nvm install ${NODE_VERSION} \
    && npm install -g node-gyp \
    && npx node-gyp install \
    && node -v \
    && npm -v \
    && gcc --version \
    && rustc --version \
    && zypper clean -a

CMD /bin/bash
