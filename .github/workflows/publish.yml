name: Upload Container image

on:
  schedule:
  - cron: "0 8 * * *"
  push:
    branches:
      - main
      - release/*
    tags:
      - 'v*'
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io

jobs:
  base-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/base

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: al9/Dockerfile.minimal
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  lang-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-lang
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/base-lang

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: al9/Dockerfile.lang
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-lang.outputs.tags }}
          labels: ${{ steps.meta-lang.outputs.labels }}

  sle-lang-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-bci-lang
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/bci-lang

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: sle/Dockerfile.lang
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-bci-lang.outputs.tags }}
          labels: ${{ steps.meta-bci-lang.outputs.labels }}

  sle-dotnet-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-bci-dotnet
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/bci-dotnet

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: sle/Dockerfile.dotnet
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-bci-dotnet.outputs.tags }}
          labels: ${{ steps.meta-bci-dotnet.outputs.labels }}

  cdxgen-dotnet-image:
    runs-on: ubuntu-latest
    needs: sle-dotnet-image
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-cdxgen-dotnet
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/cdxgen-dotnet

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: cdxgen/Dockerfile.dotnet
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/appthreat/cdxgen-dotnet:latest,ghcr.io/appthreat/cdxgen-dotnet:v10,ghcr.io/appthreat/cdxgen-dotnet6:latest,ghcr.io/appthreat/cdxgen-dotnet6:v10
          labels: ${{ steps.cdxgen-dotnet.outputs.labels }}

  sle-dotnet7-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-bci-dotnet7
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/bci-dotnet7

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: sle/Dockerfile.dotnet7
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-bci-dotnet7.outputs.tags }}
          labels: ${{ steps.meta-bci-dotnet7.outputs.labels }}

  cdxgen-dotnet7-image:
    runs-on: ubuntu-latest
    needs: sle-dotnet-image
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-cdxgen-dotnet7
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/cdxgen-dotnet7

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: cdxgen/Dockerfile.dotnet7
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/appthreat/cdxgen-dotnet7:latest,ghcr.io/appthreat/cdxgen-dotnet7:v10
          labels: ${{ steps.cdxgen-dotnet7.outputs.labels }}

  sle-java-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-bci-java
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/bci-java

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: sle/Dockerfile.java
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-bci-java.outputs.tags }}
          labels: ${{ steps.meta-bci-java.outputs.labels }}

  cdxgen-java-image:
    runs-on: ubuntu-latest
    needs: sle-java-image
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-cdxgen-java
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/cdxgen-java

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: cdxgen/Dockerfile.java
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/appthreat/cdxgen-java:latest,ghcr.io/appthreat/cdxgen-java:v10,ghcr.io/appthreat/cdxgen-java11:latest,ghcr.io/appthreat/cdxgen-java11:v10
          labels: ${{ steps.meta-cdxgen-java.outputs.labels }}

  sle-java17-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-bci-java17
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/bci-java17

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: sle/Dockerfile.java17
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-bci-java17.outputs.tags }}
          labels: ${{ steps.meta-bci-java17.outputs.labels }}

  cdxgen-java17-image:
    runs-on: ubuntu-latest
    needs: sle-java17-image
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-cdxgen-java17
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/cdxgen-java17

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: cdxgen/Dockerfile.java17
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/appthreat/cdxgen-java17:latest,ghcr.io/appthreat/cdxgen-java17:v10
          labels: ${{ steps.meta-cdxgen-java17.outputs.labels }}

  cdxgen-python-image:
    runs-on: ubuntu-latest
    needs: sle-lang-image
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-cdxgen-python
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/cdxgen-python
            ghcr.io/appthreat/cdxgen-python312

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: cdxgen/Dockerfile.python
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/appthreat/cdxgen-python:latest,ghcr.io/appthreat/cdxgen-python:v10,ghcr.io/appthreat/cdxgen-python312:latest,ghcr.io/appthreat/cdxgen-python312:v10
          labels: ${{ steps.meta-cdxgen-python.outputs.labels }}

  sle-python311-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-bci-python311
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/bci-python311

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: sle/Dockerfile.python311
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-bci-python311.outputs.tags }}
          labels: ${{ steps.meta-bci-python311.outputs.labels }}

  cdxgen-python311-image:
    runs-on: ubuntu-latest
    needs: sle-python311-image
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-cdxgen-python311
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/cdxgen-python311

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: cdxgen/Dockerfile.python311
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/appthreat/cdxgen-python311:latest,ghcr.io/appthreat/cdxgen-python311:v10
          labels: ${{ steps.meta-cdxgen-python311.outputs.labels }}

  opensuse-lang-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-opensuse-lang
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/opensuse-lang

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: opensuse/Dockerfile.lang
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-opensuse-lang.outputs.tags }}
          labels: ${{ steps.meta-opensuse-lang.outputs.labels }}

  sle-llvm-image:
    runs-on: [self-hosted, almalinux]
    timeout-minutes: 3600
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-bci-llvm
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/appthreat/bci-llvm

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: sle/Dockerfile.llvm
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta-bci-llvm.outputs.tags }}
          labels: ${{ steps.meta-bci-llvm.outputs.labels }}
